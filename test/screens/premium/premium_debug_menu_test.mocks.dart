// Mocks generated by Mockito 5.4.5 from annotations
// in pomodoro_timemaster/test/screens/premium/premium_debug_menu_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i9;

import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:pomodoro_timemaster/models/purchase_status.dart' as _i4;
import 'package:pomodoro_timemaster/models/subscription_type.dart' as _i5;
import 'package:pomodoro_timemaster/screens/premium/controllers/premium_controller.dart'
    as _i10;
import 'package:pomodoro_timemaster/screens/premium/models/pricing_plan.dart'
    as _i11;
import 'package:pomodoro_timemaster/services/revenue_cat_service.dart' as _i3;
import 'package:purchases_flutter/purchases_flutter.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAnimationController_0 extends _i1.SmartFake
    implements _i2.AnimationController {
  _FakeAnimationController_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RevenueCatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRevenueCatService extends _i1.Mock implements _i3.RevenueCatService {
  MockRevenueCatService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.PurchaseStatus get purchaseStatus =>
      (super.noSuchMethod(
            Invocation.getter(#purchaseStatus),
            returnValue: _i4.PurchaseStatus.notPurchased,
          )
          as _i4.PurchaseStatus);

  @override
  _i5.SubscriptionType get activeSubscription =>
      (super.noSuchMethod(
            Invocation.getter(#activeSubscription),
            returnValue: _i5.SubscriptionType.none,
          )
          as _i5.SubscriptionType);

  @override
  String get errorMessage =>
      (super.noSuchMethod(
            Invocation.getter(#errorMessage),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#errorMessage),
            ),
          )
          as String);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isPremium =>
      (super.noSuchMethod(Invocation.getter(#isPremium), returnValue: false)
          as bool);

  @override
  String get statusText =>
      (super.noSuchMethod(
            Invocation.getter(#statusText),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#statusText),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i7.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> forceReloadOfferings() =>
      (super.noSuchMethod(
            Invocation.method(#forceReloadOfferings, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> purchaseProduct(String? productId) =>
      (super.noSuchMethod(
            Invocation.method(#purchaseProduct, [productId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> checkPendingPurchases() =>
      (super.noSuchMethod(
            Invocation.method(#checkPendingPurchases, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i8.CustomerInfo?> purchasePackage(_i8.Package? package) =>
      (super.noSuchMethod(
            Invocation.method(#purchasePackage, [package]),
            returnValue: _i7.Future<_i8.CustomerInfo?>.value(),
          )
          as _i7.Future<_i8.CustomerInfo?>);

  @override
  _i7.Future<bool> restorePurchases() =>
      (super.noSuchMethod(
            Invocation.method(#restorePurchases, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void enableDevPremiumAccess() => super.noSuchMethod(
    Invocation.method(#enableDevPremiumAccess, []),
    returnValueForMissingStub: null,
  );

  @override
  void disableDevPremiumAccess() => super.noSuchMethod(
    Invocation.method(#disableDevPremiumAccess, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> showSubscriptionPlans(_i2.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#showSubscriptionPlans, [context]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> showPremiumBenefits(_i2.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#showPremiumBenefits, [context]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> openManageSubscriptionsPage() =>
      (super.noSuchMethod(
            Invocation.method(#openManageSubscriptionsPage, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> scheduleExpiryNotification(
    DateTime? expiryDate,
    String? subscriptionType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#scheduleExpiryNotification, [
              expiryDate,
              subscriptionType,
            ]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> cancelExpiryNotification() =>
      (super.noSuchMethod(
            Invocation.method(#cancelExpiryNotification, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  String getPriceForProduct(String? productId) =>
      (super.noSuchMethod(
            Invocation.method(#getPriceForProduct, [productId]),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#getPriceForProduct, [productId]),
            ),
          )
          as String);

  @override
  _i8.Package? getPackageForProduct(String? productId) =>
      (super.noSuchMethod(Invocation.method(#getPackageForProduct, [productId]))
          as _i8.Package?);

  @override
  _i7.Future<bool> checkAccessAndShowPaywallIfNeeded(
    _i2.BuildContext? context,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkAccessAndShowPaywallIfNeeded, [context]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void showErrorDialog(_i2.BuildContext? context, String? message) =>
      super.noSuchMethod(
        Invocation.method(#showErrorDialog, [context, message]),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> verifyPremiumEntitlements() =>
      (super.noSuchMethod(
            Invocation.method(#verifyPremiumEntitlements, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<Map<String, dynamic>> debugPaywallConfiguration() =>
      (super.noSuchMethod(
            Invocation.method(#debugPaywallConfiguration, []),
            returnValue: _i7.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<Map<String, dynamic>> verifyEntitlementsPersistence() =>
      (super.noSuchMethod(
            Invocation.method(#verifyEntitlementsPersistence, []),
            returnValue: _i7.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<_i8.Offerings?> getOfferings() =>
      (super.noSuchMethod(
            Invocation.method(#getOfferings, []),
            returnValue: _i7.Future<_i8.Offerings?>.value(),
          )
          as _i7.Future<_i8.Offerings?>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> openSubscriptionManagementPage() =>
      (super.noSuchMethod(
            Invocation.method(#openSubscriptionManagementPage, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PremiumController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPremiumController extends _i1.Mock implements _i10.PremiumController {
  MockPremiumController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set selectedPlan(_i11.PricingPlan? _selectedPlan) => super.noSuchMethod(
    Invocation.setter(#selectedPlan, _selectedPlan),
    returnValueForMissingStub: null,
  );

  @override
  bool get isRestoring =>
      (super.noSuchMethod(Invocation.getter(#isRestoring), returnValue: false)
          as bool);

  @override
  set isRestoring(bool? _isRestoring) => super.noSuchMethod(
    Invocation.setter(#isRestoring, _isRestoring),
    returnValueForMissingStub: null,
  );

  @override
  _i2.AnimationController get animationController =>
      (super.noSuchMethod(
            Invocation.getter(#animationController),
            returnValue: _FakeAnimationController_0(
              this,
              Invocation.getter(#animationController),
            ),
          )
          as _i2.AnimationController);

  @override
  _i9.VoidCallback get onStateChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onStateChanged),
            returnValue: () {},
          )
          as _i9.VoidCallback);

  @override
  _i7.Future<void> initializeRevenueCat(
    _i3.RevenueCatService? revenueCatService,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#initializeRevenueCat, [revenueCatService]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  void selectPlan(_i11.PricingPlan? plan) => super.noSuchMethod(
    Invocation.method(#selectPlan, [plan]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> handleSubscribe(_i3.RevenueCatService? revenueCatService) =>
      (super.noSuchMethod(
            Invocation.method(#handleSubscribe, [revenueCatService]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> restorePurchases(
    _i2.BuildContext? context,
    _i3.RevenueCatService? revenueCatService,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#restorePurchases, [context, revenueCatService]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}
