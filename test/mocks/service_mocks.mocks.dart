// Mocks generated by Mockito 5.4.5 from annotations
// in pomodoro_timemaster/test/mocks/service_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:flutter/material.dart' as _i1;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:pomodoro_timemaster/models/purchase_status.dart' as _i11;
import 'package:pomodoro_timemaster/models/subscription_type.dart' as _i12;
import 'package:pomodoro_timemaster/models/timer_state.dart' as _i4;
import 'package:pomodoro_timemaster/services/analytics_service.dart' as _i5;
import 'package:pomodoro_timemaster/services/cloudkit_service.dart' as _i7;
import 'package:pomodoro_timemaster/services/notification_service.dart' as _i9;
import 'package:pomodoro_timemaster/services/revenue_cat_service.dart' as _i10;
import 'package:pomodoro_timemaster/services/sync_service.dart' as _i15;
import 'package:pomodoro_timemaster/services/timer_service.dart' as _i16;
import 'package:purchases_flutter/purchases_flutter.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFlutterLocalNotificationsPlugin_1 extends _i2.SmartFake
    implements _i3.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeTimerState_2 extends _i2.SmartFake implements _i4.TimerState {
  _FakeTimerState_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i2.Mock implements _i5.AnalyticsService {
  MockAnalyticsService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(#initialize, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logEvent(String? name, [Map<String, dynamic>? parameters]) =>
      (super.noSuchMethod(
        Invocation.method(#logEvent, [name, parameters]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setUserProperties(Map<String, dynamic>? properties) =>
      (super.noSuchMethod(
        Invocation.method(#setUserProperties, [properties]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logPurchaseCompleted({
    required String? productId,
    required double? price,
    required String? currency,
    required String? paymentMethod,
    required bool? success,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#logPurchaseCompleted, [], {
          #productId: productId,
          #price: price,
          #currency: currency,
          #paymentMethod: paymentMethod,
          #success: success,
        }),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logPremiumScreenViewed() => (super.noSuchMethod(
        Invocation.method(#logPremiumScreenViewed, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logPremiumFeatureTapped(String? featureName) =>
      (super.noSuchMethod(
        Invocation.method(#logPremiumFeatureTapped, [featureName]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logSubscriptionUpdated({
    required String? productId,
    required String? subscriptionType,
    required bool? isRenewal,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#logSubscriptionUpdated, [], {
          #productId: productId,
          #subscriptionType: subscriptionType,
          #isRenewal: isRenewal,
        }),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logSubscriptionExpired(String? subscriptionType) =>
      (super.noSuchMethod(
        Invocation.method(#logSubscriptionExpired, [subscriptionType]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> logPurchasesRestored(bool? success) => (super.noSuchMethod(
        Invocation.method(#logPurchasesRestored, [success]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [CloudKitService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudKitService extends _i2.Mock implements _i7.CloudKitService {
  MockCloudKitService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isOnline =>
      (super.noSuchMethod(Invocation.getter(#isOnline), returnValue: false)
          as bool);

  @override
  _i6.Stream<bool> get availabilityStream => (super.noSuchMethod(
        Invocation.getter(#availabilityStream),
        returnValue: _i6.Stream<bool>.empty(),
      ) as _i6.Stream<bool>);

  @override
  _i6.Stream<void> get dataChangedStream => (super.noSuchMethod(
        Invocation.getter(#dataChangedStream),
        returnValue: _i6.Stream<void>.empty(),
      ) as _i6.Stream<void>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(#initialize, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> saveData(
    String? recordType,
    String? recordId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#saveData, [recordType, recordId, data]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Map<String, dynamic>?> fetchData(
    String? recordType,
    String? recordId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#fetchData, [recordType, recordId]),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  void addPendingOperationForTest(Map<String, dynamic>? data) =>
      super.noSuchMethod(
        Invocation.method(#addPendingOperationForTest, [data]),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> processPendingOperations() => (super.noSuchMethod(
        Invocation.method(#processPendingOperations, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> isICloudAvailable() => (super.noSuchMethod(
        Invocation.method(#isICloudAvailable, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> subscribeToChanges() => (super.noSuchMethod(
        Invocation.method(#subscribeToChanges, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void updateAvailability(bool? available) => super.noSuchMethod(
        Invocation.method(#updateAvailability, [available]),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> openAppSettings() => (super.noSuchMethod(
        Invocation.method(#openAppSettings, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i2.Mock
    implements _i9.NotificationService {
  MockNotificationService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i3.FlutterLocalNotificationsPlugin get flutterLocalNotificationsPlugin =>
      (super.noSuchMethod(
        Invocation.getter(#flutterLocalNotificationsPlugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_1(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
      ) as _i3.FlutterLocalNotificationsPlugin);

  @override
  _i3.FlutterLocalNotificationsPlugin get testablePlugin => (super.noSuchMethod(
        Invocation.getter(#testablePlugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_1(
          this,
          Invocation.getter(#testablePlugin),
        ),
      ) as _i3.FlutterLocalNotificationsPlugin);

  @override
  _i6.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(#initialize, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> playTimerCompletionSound() => (super.noSuchMethod(
        Invocation.method(#playTimerCompletionSound, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playBreakCompletionSound() => (super.noSuchMethod(
        Invocation.method(#playBreakCompletionSound, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playLongBreakCompletionSound() => (super.noSuchMethod(
        Invocation.method(#playLongBreakCompletionSound, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playTestSound(int? soundType) => (super.noSuchMethod(
        Invocation.method(#playTestSound, [soundType]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> scheduleTimerNotification(Duration? duration) =>
      (super.noSuchMethod(
        Invocation.method(#scheduleTimerNotification, [duration]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> scheduleBreakNotification(Duration? duration) =>
      (super.noSuchMethod(
        Invocation.method(#scheduleBreakNotification, [duration]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> scheduleExpiryNotification(
    DateTime? expiryDate,
    String? subscriptionType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#scheduleExpiryNotification, [
          expiryDate,
          subscriptionType,
        ]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> cancelAllNotifications() => (super.noSuchMethod(
        Invocation.method(#cancelAllNotifications, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> cancelExpiryNotification() => (super.noSuchMethod(
        Invocation.method(#cancelExpiryNotification, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> isNotificationScheduled() => (super.noSuchMethod(
        Invocation.method(#isNotificationScheduled, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void showPermissionInstructions(_i1.BuildContext? context) =>
      super.noSuchMethod(
        Invocation.method(#showPermissionInstructions, [context]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RevenueCatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRevenueCatService extends _i2.Mock implements _i10.RevenueCatService {
  MockRevenueCatService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i11.PurchaseStatus get purchaseStatus => (super.noSuchMethod(
        Invocation.getter(#purchaseStatus),
        returnValue: _i11.PurchaseStatus.notPurchased,
      ) as _i11.PurchaseStatus);

  @override
  _i12.SubscriptionType get activeSubscription => (super.noSuchMethod(
        Invocation.getter(#activeSubscription),
        returnValue: _i12.SubscriptionType.none,
      ) as _i12.SubscriptionType);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isPremium =>
      (super.noSuchMethod(Invocation.getter(#isPremium), returnValue: false)
          as bool);

  @override
  String get statusText => (super.noSuchMethod(
        Invocation.getter(#statusText),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#statusText),
        ),
      ) as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(#initialize, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> forceReloadOfferings() => (super.noSuchMethod(
        Invocation.method(#forceReloadOfferings, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> purchaseProduct(String? productId) => (super.noSuchMethod(
        Invocation.method(#purchaseProduct, [productId]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> checkPendingPurchases() => (super.noSuchMethod(
        Invocation.method(#checkPendingPurchases, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i14.CustomerInfo?> purchasePackage(_i14.Package? package) =>
      (super.noSuchMethod(
        Invocation.method(#purchasePackage, [package]),
        returnValue: _i6.Future<_i14.CustomerInfo?>.value(),
      ) as _i6.Future<_i14.CustomerInfo?>);

  @override
  _i6.Future<bool> restorePurchases() => (super.noSuchMethod(
        Invocation.method(#restorePurchases, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void enableDevPremiumAccess() => super.noSuchMethod(
        Invocation.method(#enableDevPremiumAccess, []),
        returnValueForMissingStub: null,
      );

  @override
  void disableDevPremiumAccess() => super.noSuchMethod(
        Invocation.method(#disableDevPremiumAccess, []),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> showSubscriptionPlans(_i1.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(#showSubscriptionPlans, [context]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> showPremiumBenefits(_i1.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(#showPremiumBenefits, [context]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> openManageSubscriptionsPage() => (super.noSuchMethod(
        Invocation.method(#openManageSubscriptionsPage, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> scheduleExpiryNotification(
    DateTime? expiryDate,
    String? subscriptionType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#scheduleExpiryNotification, [
          expiryDate,
          subscriptionType,
        ]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> cancelExpiryNotification() => (super.noSuchMethod(
        Invocation.method(#cancelExpiryNotification, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  String getPriceForProduct(String? productId) => (super.noSuchMethod(
        Invocation.method(#getPriceForProduct, [productId]),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(#getPriceForProduct, [productId]),
        ),
      ) as String);

  @override
  _i14.Package? getPackageForProduct(String? productId) =>
      (super.noSuchMethod(Invocation.method(#getPackageForProduct, [productId]))
          as _i14.Package?);

  @override
  _i6.Future<bool> checkAccessAndShowPaywallIfNeeded(
    _i1.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#checkAccessAndShowPaywallIfNeeded, [context]),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void showErrorDialog(_i1.BuildContext? context, String? message) =>
      super.noSuchMethod(
        Invocation.method(#showErrorDialog, [context, message]),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> verifyPremiumEntitlements() => (super.noSuchMethod(
        Invocation.method(#verifyPremiumEntitlements, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Map<String, dynamic>> debugPaywallConfiguration() =>
      (super.noSuchMethod(
        Invocation.method(#debugPaywallConfiguration, []),
        returnValue: _i6.Future<Map<String, dynamic>>.value(
          <String, dynamic>{},
        ),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> verifyEntitlementsPersistence() =>
      (super.noSuchMethod(
        Invocation.method(#verifyEntitlementsPersistence, []),
        returnValue: _i6.Future<Map<String, dynamic>>.value(
          <String, dynamic>{},
        ),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<_i14.Offerings?> getOfferings() => (super.noSuchMethod(
        Invocation.method(#getOfferings, []),
        returnValue: _i6.Future<_i14.Offerings?>.value(),
      ) as _i6.Future<_i14.Offerings?>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> openSubscriptionManagementPage() => (super.noSuchMethod(
        Invocation.method(#openSubscriptionManagementPage, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SyncService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncService extends _i2.Mock implements _i15.SyncService {
  MockSyncService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  bool get isSyncing =>
      (super.noSuchMethod(Invocation.getter(#isSyncing), returnValue: false)
          as bool);

  @override
  _i15.SyncStatus get syncStatus => (super.noSuchMethod(
        Invocation.getter(#syncStatus),
        returnValue: _i15.SyncStatus.notSynced,
      ) as _i15.SyncStatus);

  @override
  String get lastSyncedTime => (super.noSuchMethod(
        Invocation.getter(#lastSyncedTime),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#lastSyncedTime),
        ),
      ) as String);

  @override
  bool get iCloudSyncEnabled => (super.noSuchMethod(
        Invocation.getter(#iCloudSyncEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get isPremium =>
      (super.noSuchMethod(Invocation.getter(#isPremium), returnValue: false)
          as bool);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(#initialize, []),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> getSyncEnabled() => (super.noSuchMethod(
        Invocation.method(#getSyncEnabled, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> setSyncEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(#setSyncEnabled, [enabled]),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> isSyncEnabled() => (super.noSuchMethod(
        Invocation.method(#isSyncEnabled, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<String> getLastSyncedTime() => (super.noSuchMethod(
        Invocation.method(#getLastSyncedTime, []),
        returnValue: _i6.Future<String>.value(
          _i13.dummyValue<String>(
            this,
            Invocation.method(#getLastSyncedTime, []),
          ),
        ),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> updateLastSyncedTime() => (super.noSuchMethod(
        Invocation.method(#updateLastSyncedTime, []),
        returnValue: _i6.Future<String>.value(
          _i13.dummyValue<String>(
            this,
            Invocation.method(#updateLastSyncedTime, []),
          ),
        ),
      ) as _i6.Future<String>);

  @override
  _i6.Future<bool> syncData() => (super.noSuchMethod(
        Invocation.method(#syncData, []),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void setOnlineStatus(bool? isOnline) => super.noSuchMethod(
        Invocation.method(#setOnlineStatus, [isOnline]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TimerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerService extends _i2.Mock implements _i16.TimerService {
  MockTimerService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i4.TimerState get timerState => (super.noSuchMethod(
        Invocation.getter(#timerState),
        returnValue: _FakeTimerState_2(
          this,
          Invocation.getter(#timerState),
        ),
      ) as _i4.TimerState);

  @override
  bool get isRunning =>
      (super.noSuchMethod(Invocation.getter(#isRunning), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void startTimer(int? durationMinutes, Function? onComplete) =>
      super.noSuchMethod(
        Invocation.method(#startTimer, [durationMinutes, onComplete]),
        returnValueForMissingStub: null,
      );

  @override
  void startBreak(int? durationMinutes, Function? onComplete) =>
      super.noSuchMethod(
        Invocation.method(#startBreak, [durationMinutes, onComplete]),
        returnValueForMissingStub: null,
      );

  @override
  void pauseTimer() => super.noSuchMethod(
        Invocation.method(#pauseTimer, []),
        returnValueForMissingStub: null,
      );

  @override
  void resumeTimer(Function? onComplete) => super.noSuchMethod(
        Invocation.method(#resumeTimer, [onComplete]),
        returnValueForMissingStub: null,
      );

  @override
  void resetTimer(int? defaultDurationMinutes) => super.noSuchMethod(
        Invocation.method(#resetTimer, [defaultDurationMinutes]),
        returnValueForMissingStub: null,
      );

  @override
  void loadState() => super.noSuchMethod(
        Invocation.method(#loadState, []),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(#dispose, []),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#addListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(#removeListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(#notifyListeners, []),
        returnValueForMissingStub: null,
      );
}
